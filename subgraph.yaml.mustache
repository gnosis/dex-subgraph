# Subgraph manifest
#   schema: https://github.com/graphprotocol/graph-node/blob/master/docs/subgraph-manifest.md

specVersion: 0.0.2
description: >
 Gnosis Protocol introduces a new, fully decentralized exchange mechanism for ERC20 tokens with the following properties:
  Batch auctions, 
  Multidimensional order books with ring trades, and
  Uniform clearing prices in every batch

  

  More info in https://docs.gnosis.io/protocol
repository: https://github.com/gnosis/dex-subgraph

schema:
  file: ./schema.graphql

dataSources:
  # BatchExchange contract
  - kind: ethereum/contract
    name: BatchExchange
    network: {{ network }}
    source:
      address: '{{ address_batch_exchange }}'
      abi: BatchExchange
{{#startBlock}}
      startBlock: {{ startBlock }}
{{/startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/index.ts
      entities:
        - Order
        - Token
      abis:
        - name: BatchExchange
          file: ./abis/BatchExchange.json
        - name: Erc20
          file: ./abis/Erc20.json
{{#indexCalls}}
      callHandlers:
        # Tokens
        - function: addToken(address)
          handler: onAddToken
{{/indexCalls}}
      eventHandlers:
        # Deposits
        - event: Deposit(indexed address,indexed address,uint256,uint32)
          handler: onDeposit

        # Withdrawals
        - event: Withdraw(indexed address,indexed address,uint256)
          handler: onWithdraw
        - event: WithdrawRequest(indexed address,indexed address,uint256,uint32)
          handler: onWithdrawRequest

        # Orders
        - event: OrderPlacement(indexed address,uint16,indexed uint16,indexed uint16,uint32,uint32,uint128,uint128)
          handler: onOrderPlacement
        
        # TODO: Update to @graphprotocol/graph-cli@0.19.0 when it's released
        - event: OrderCancellation(indexed address,uint16)
          handler: onOrderCancellation
        - event: OrderDeletion(indexed address,uint16)
          handler: onOrderDeletion
        
        # Trades
        - event: Trade(indexed address,indexed uint16,indexed uint16,uint16,uint128,uint128)
          handler: onTrade
        - event: TradeReversion(indexed address,indexed uint16,indexed uint16,uint16,uint128,uint128)
          handler: onTradeReversion
  # FleetFactory contract
  - kind: ethereum/contract
    name: FleetFactory
    network: {{ network }}
    source:
      address: '{{ address_fleet_factory }}'
      abi: FleetFactory
{{#startBlock}}
      startBlock: {{ startBlock }}
{{/startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FleetDeployed
      file: ./src/mappings/index.ts
      abis:
        - name: FleetFactory
          file: ./abis/FleetFactory.json
      eventHandlers:
        # FleetDeployments
        - event: FleetDeployed(indexed address,address[])
          handler: onFleetDeployment
